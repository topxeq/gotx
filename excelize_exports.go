package main

import (
	"go/constant"
	"go/token"
	"reflect"

	"github.com/360EntSecGroup-Skylar/excelize"
)

func init() {
	GotxSymbols["github.com/360EntSecGroup-Skylar/excelize"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Area":                               reflect.ValueOf(excelize.Area),
		"Area3D":                             reflect.ValueOf(excelize.Area3D),
		"Area3DPercentStacked":               reflect.ValueOf(excelize.Area3DPercentStacked),
		"Area3DStacked":                      reflect.ValueOf(excelize.Area3DStacked),
		"AreaPercentStacked":                 reflect.ValueOf(excelize.AreaPercentStacked),
		"AreaStacked":                        reflect.ValueOf(excelize.AreaStacked),
		"ArgMatrix":                          reflect.ValueOf(excelize.ArgMatrix),
		"ArgString":                          reflect.ValueOf(excelize.ArgString),
		"ArgUnknown":                         reflect.ValueOf(excelize.ArgUnknown),
		"Bar":                                reflect.ValueOf(excelize.Bar),
		"Bar3DClustered":                     reflect.ValueOf(excelize.Bar3DClustered),
		"Bar3DConeClustered":                 reflect.ValueOf(excelize.Bar3DConeClustered),
		"Bar3DConePercentStacked":            reflect.ValueOf(excelize.Bar3DConePercentStacked),
		"Bar3DConeStacked":                   reflect.ValueOf(excelize.Bar3DConeStacked),
		"Bar3DCylinderClustered":             reflect.ValueOf(excelize.Bar3DCylinderClustered),
		"Bar3DCylinderPercentStacked":        reflect.ValueOf(excelize.Bar3DCylinderPercentStacked),
		"Bar3DCylinderStacked":               reflect.ValueOf(excelize.Bar3DCylinderStacked),
		"Bar3DPercentStacked":                reflect.ValueOf(excelize.Bar3DPercentStacked),
		"Bar3DPyramidClustered":              reflect.ValueOf(excelize.Bar3DPyramidClustered),
		"Bar3DPyramidPercentStacked":         reflect.ValueOf(excelize.Bar3DPyramidPercentStacked),
		"Bar3DPyramidStacked":                reflect.ValueOf(excelize.Bar3DPyramidStacked),
		"Bar3DStacked":                       reflect.ValueOf(excelize.Bar3DStacked),
		"BarOfPieChart":                      reflect.ValueOf(excelize.BarOfPieChart),
		"BarPercentStacked":                  reflect.ValueOf(excelize.BarPercentStacked),
		"BarStacked":                         reflect.ValueOf(excelize.BarStacked),
		"Bubble":                             reflect.ValueOf(excelize.Bubble),
		"Bubble3D":                           reflect.ValueOf(excelize.Bubble3D),
		"CellNameToCoordinates":              reflect.ValueOf(excelize.CellNameToCoordinates),
		"Col":                                reflect.ValueOf(excelize.Col),
		"Col3D":                              reflect.ValueOf(excelize.Col3D),
		"Col3DClustered":                     reflect.ValueOf(excelize.Col3DClustered),
		"Col3DCone":                          reflect.ValueOf(excelize.Col3DCone),
		"Col3DConeClustered":                 reflect.ValueOf(excelize.Col3DConeClustered),
		"Col3DConePercentStacked":            reflect.ValueOf(excelize.Col3DConePercentStacked),
		"Col3DConeStacked":                   reflect.ValueOf(excelize.Col3DConeStacked),
		"Col3DCylinder":                      reflect.ValueOf(excelize.Col3DCylinder),
		"Col3DCylinderClustered":             reflect.ValueOf(excelize.Col3DCylinderClustered),
		"Col3DCylinderPercentStacked":        reflect.ValueOf(excelize.Col3DCylinderPercentStacked),
		"Col3DCylinderStacked":               reflect.ValueOf(excelize.Col3DCylinderStacked),
		"Col3DPercentStacked":                reflect.ValueOf(excelize.Col3DPercentStacked),
		"Col3DPyramid":                       reflect.ValueOf(excelize.Col3DPyramid),
		"Col3DPyramidClustered":              reflect.ValueOf(excelize.Col3DPyramidClustered),
		"Col3DPyramidPercentStacked":         reflect.ValueOf(excelize.Col3DPyramidPercentStacked),
		"Col3DPyramidStacked":                reflect.ValueOf(excelize.Col3DPyramidStacked),
		"Col3DStacked":                       reflect.ValueOf(excelize.Col3DStacked),
		"ColPercentStacked":                  reflect.ValueOf(excelize.ColPercentStacked),
		"ColStacked":                         reflect.ValueOf(excelize.ColStacked),
		"ColumnNameToNumber":                 reflect.ValueOf(excelize.ColumnNameToNumber),
		"ColumnNumberToName":                 reflect.ValueOf(excelize.ColumnNumberToName),
		"ContentTypeDrawing":                 reflect.ValueOf(excelize.ContentTypeDrawing),
		"ContentTypeDrawingML":               reflect.ValueOf(excelize.ContentTypeDrawingML),
		"ContentTypeMacro":                   reflect.ValueOf(excelize.ContentTypeMacro),
		"ContentTypeSpreadSheetMLChartsheet": reflect.ValueOf(excelize.ContentTypeSpreadSheetMLChartsheet),
		"ContentTypeSpreadSheetMLComments":   reflect.ValueOf(excelize.ContentTypeSpreadSheetMLComments),
		"ContentTypeSpreadSheetMLPivotCacheDefinition": reflect.ValueOf(excelize.ContentTypeSpreadSheetMLPivotCacheDefinition),
		"ContentTypeSpreadSheetMLPivotTable":           reflect.ValueOf(excelize.ContentTypeSpreadSheetMLPivotTable),
		"ContentTypeSpreadSheetMLSharedStrings":        reflect.ValueOf(excelize.ContentTypeSpreadSheetMLSharedStrings),
		"ContentTypeSpreadSheetMLTable":                reflect.ValueOf(excelize.ContentTypeSpreadSheetMLTable),
		"ContentTypeSpreadSheetMLWorksheet":            reflect.ValueOf(excelize.ContentTypeSpreadSheetMLWorksheet),
		"ContentTypeVBA":                               reflect.ValueOf(excelize.ContentTypeVBA),
		"ContentTypeVML":                               reflect.ValueOf(excelize.ContentTypeVML),
		"Contour":                                      reflect.ValueOf(excelize.Contour),
		"CoordinatesToCellName":                        reflect.ValueOf(excelize.CoordinatesToCellName),
		"DataValidationErrorStyleInformation":          reflect.ValueOf(excelize.DataValidationErrorStyleInformation),
		"DataValidationErrorStyleStop":                 reflect.ValueOf(excelize.DataValidationErrorStyleStop),
		"DataValidationErrorStyleWarning":              reflect.ValueOf(excelize.DataValidationErrorStyleWarning),
		"DataValidationOperatorBetween":                reflect.ValueOf(constant.MakeFromLiteral("1", token.INT, 0)),
		"DataValidationOperatorEqual":                  reflect.ValueOf(constant.MakeFromLiteral("2", token.INT, 0)),
		"DataValidationOperatorGreaterThan":            reflect.ValueOf(constant.MakeFromLiteral("3", token.INT, 0)),
		"DataValidationOperatorGreaterThanOrEqual":     reflect.ValueOf(constant.MakeFromLiteral("4", token.INT, 0)),
		"DataValidationOperatorLessThan":               reflect.ValueOf(constant.MakeFromLiteral("5", token.INT, 0)),
		"DataValidationOperatorLessThanOrEqual":        reflect.ValueOf(constant.MakeFromLiteral("6", token.INT, 0)),
		"DataValidationOperatorNotBetween":             reflect.ValueOf(constant.MakeFromLiteral("7", token.INT, 0)),
		"DataValidationOperatorNotEqual":               reflect.ValueOf(constant.MakeFromLiteral("8", token.INT, 0)),
		"DataValidationTypeCustom":                     reflect.ValueOf(constant.MakeFromLiteral("2", token.INT, 0)),
		"DataValidationTypeDate":                       reflect.ValueOf(constant.MakeFromLiteral("3", token.INT, 0)),
		"DataValidationTypeDecimal":                    reflect.ValueOf(constant.MakeFromLiteral("4", token.INT, 0)),
		"DataValidationTypeTextLeng":                   reflect.ValueOf(constant.MakeFromLiteral("6", token.INT, 0)),
		"DataValidationTypeTime":                       reflect.ValueOf(constant.MakeFromLiteral("7", token.INT, 0)),
		"DataValidationTypeWhole":                      reflect.ValueOf(constant.MakeFromLiteral("8", token.INT, 0)),
		"Doughnut":                                     reflect.ValueOf(excelize.Doughnut),
		"EMU":                                          reflect.ValueOf(excelize.EMU),
		"ExcelDateToTime":                              reflect.ValueOf(excelize.ExcelDateToTime),
		"ExtURIConditionalFormattings":                 reflect.ValueOf(excelize.ExtURIConditionalFormattings),
		"ExtURIDataValidations":                        reflect.ValueOf(excelize.ExtURIDataValidations),
		"ExtURIDrawingBlip":                            reflect.ValueOf(excelize.ExtURIDrawingBlip),
		"ExtURIIgnoredErrors":                          reflect.ValueOf(excelize.ExtURIIgnoredErrors),
		"ExtURIMacExcelMX":                             reflect.ValueOf(excelize.ExtURIMacExcelMX),
		"ExtURIProtectedRanges":                        reflect.ValueOf(excelize.ExtURIProtectedRanges),
		"ExtURISlicerCachesListX14":                    reflect.ValueOf(excelize.ExtURISlicerCachesListX14),
		"ExtURISlicerListX14":                          reflect.ValueOf(excelize.ExtURISlicerListX14),
		"ExtURISlicerListX15":                          reflect.ValueOf(excelize.ExtURISlicerListX15),
		"ExtURISparklineGroups":                        reflect.ValueOf(excelize.ExtURISparklineGroups),
		"ExtURITimelineRefs":                           reflect.ValueOf(excelize.ExtURITimelineRefs),
		"ExtURIWebExtensions":                          reflect.ValueOf(excelize.ExtURIWebExtensions),
		"FileNameLength":                               reflect.ValueOf(constant.MakeFromLiteral("207", token.INT, 0)),
		"HSLModel":                                     reflect.ValueOf(&excelize.HSLModel).Elem(),
		"HSLToRGB":                                     reflect.ValueOf(excelize.HSLToRGB),
		"JoinCellName":                                 reflect.ValueOf(excelize.JoinCellName),
		"Line":                                         reflect.ValueOf(excelize.Line),
		"NameSpaceDrawingML":                           reflect.ValueOf(excelize.NameSpaceDrawingML),
		"NameSpaceDrawingMLChart":                      reflect.ValueOf(excelize.NameSpaceDrawingMLChart),
		"NameSpaceDrawingMLSpreadSheet":                reflect.ValueOf(excelize.NameSpaceDrawingMLSpreadSheet),
		"NameSpaceDublinCore":                          reflect.ValueOf(excelize.NameSpaceDublinCore),
		"NameSpaceDublinCoreMetadataIntiative":         reflect.ValueOf(excelize.NameSpaceDublinCoreMetadataIntiative),
		"NameSpaceDublinCoreTerms":                     reflect.ValueOf(excelize.NameSpaceDublinCoreTerms),
		"NameSpaceMacExcel2008Main":                    reflect.ValueOf(excelize.NameSpaceMacExcel2008Main),
		"NameSpaceSpreadSheet":                         reflect.ValueOf(excelize.NameSpaceSpreadSheet),
		"NameSpaceSpreadSheetExcel2006Main":            reflect.ValueOf(excelize.NameSpaceSpreadSheetExcel2006Main),
		"NameSpaceSpreadSheetX14":                      reflect.ValueOf(excelize.NameSpaceSpreadSheetX14),
		"NameSpaceSpreadSheetX15":                      reflect.ValueOf(excelize.NameSpaceSpreadSheetX15),
		"NameSpaceXML":                                 reflect.ValueOf(excelize.NameSpaceXML),
		"NameSpaceXMLSchemaInstance":                   reflect.ValueOf(excelize.NameSpaceXMLSchemaInstance),
		"NewDataValidation":                            reflect.ValueOf(excelize.NewDataValidation),
		"NewFile":                                      reflect.ValueOf(excelize.NewFile),
		"NewStack":                                     reflect.ValueOf(excelize.NewStack),
		"OpenFile":                                     reflect.ValueOf(excelize.OpenFile),
		"OpenReader":                                   reflect.ValueOf(excelize.OpenReader),
		"OrientationLandscape":                         reflect.ValueOf(excelize.OrientationLandscape),
		"OrientationPortrait":                          reflect.ValueOf(excelize.OrientationPortrait),
		"Pie":                                          reflect.ValueOf(excelize.Pie),
		"Pie3D":                                        reflect.ValueOf(excelize.Pie3D),
		"PieOfPieChart":                                reflect.ValueOf(excelize.PieOfPieChart),
		"RGBToHSL":                                     reflect.ValueOf(excelize.RGBToHSL),
		"Radar":                                        reflect.ValueOf(excelize.Radar),
		"ReadZipReader":                                reflect.ValueOf(excelize.ReadZipReader),
		"STCellFormulaTypeArray":                       reflect.ValueOf(excelize.STCellFormulaTypeArray),
		"STCellFormulaTypeDataTable":                   reflect.ValueOf(excelize.STCellFormulaTypeDataTable),
		"STCellFormulaTypeNormal":                      reflect.ValueOf(excelize.STCellFormulaTypeNormal),
		"STCellFormulaTypeShared":                      reflect.ValueOf(excelize.STCellFormulaTypeShared),
		"Scatter":                                      reflect.ValueOf(excelize.Scatter),
		"SourceRelationship":                           reflect.ValueOf(excelize.SourceRelationship),
		"SourceRelationshipChart":                      reflect.ValueOf(excelize.SourceRelationshipChart),
		"SourceRelationshipChart20070802":              reflect.ValueOf(excelize.SourceRelationshipChart20070802),
		"SourceRelationshipChart2014":                  reflect.ValueOf(excelize.SourceRelationshipChart2014),
		"SourceRelationshipChart201506":                reflect.ValueOf(excelize.SourceRelationshipChart201506),
		"SourceRelationshipChartsheet":                 reflect.ValueOf(excelize.SourceRelationshipChartsheet),
		"SourceRelationshipComments":                   reflect.ValueOf(excelize.SourceRelationshipComments),
		"SourceRelationshipCompatibility":              reflect.ValueOf(excelize.SourceRelationshipCompatibility),
		"SourceRelationshipDialogsheet":                reflect.ValueOf(excelize.SourceRelationshipDialogsheet),
		"SourceRelationshipDrawingML":                  reflect.ValueOf(excelize.SourceRelationshipDrawingML),
		"SourceRelationshipDrawingVML":                 reflect.ValueOf(excelize.SourceRelationshipDrawingVML),
		"SourceRelationshipHyperLink":                  reflect.ValueOf(excelize.SourceRelationshipHyperLink),
		"SourceRelationshipImage":                      reflect.ValueOf(excelize.SourceRelationshipImage),
		"SourceRelationshipPivotCache":                 reflect.ValueOf(excelize.SourceRelationshipPivotCache),
		"SourceRelationshipPivotTable":                 reflect.ValueOf(excelize.SourceRelationshipPivotTable),
		"SourceRelationshipSharedStrings":              reflect.ValueOf(excelize.SourceRelationshipSharedStrings),
		"SourceRelationshipTable":                      reflect.ValueOf(excelize.SourceRelationshipTable),
		"SourceRelationshipVBAProject":                 reflect.ValueOf(excelize.SourceRelationshipVBAProject),
		"SourceRelationshipWorkSheet":                  reflect.ValueOf(excelize.SourceRelationshipWorkSheet),
		"SplitCellName":                                reflect.ValueOf(excelize.SplitCellName),
		"StrictNameSpaceSpreadSheet":                   reflect.ValueOf(excelize.StrictNameSpaceSpreadSheet),
		"StrictSourceRelationship":                     reflect.ValueOf(excelize.StrictSourceRelationship),
		"StrictSourceRelationshipChart":                reflect.ValueOf(excelize.StrictSourceRelationshipChart),
		"StrictSourceRelationshipComments":             reflect.ValueOf(excelize.StrictSourceRelationshipComments),
		"StrictSourceRelationshipImage":                reflect.ValueOf(excelize.StrictSourceRelationshipImage),
		"Surface3D":                                    reflect.ValueOf(excelize.Surface3D),
		"ThemeColor":                                   reflect.ValueOf(excelize.ThemeColor),
		"TotalCellChars":                               reflect.ValueOf(constant.MakeFromLiteral("32767", token.INT, 0)),
		"TotalColumns":                                 reflect.ValueOf(constant.MakeFromLiteral("16384", token.INT, 0)),
		"TotalRows":                                    reflect.ValueOf(constant.MakeFromLiteral("1048576", token.INT, 0)),
		"TotalSheetHyperlinks":                         reflect.ValueOf(constant.MakeFromLiteral("65529", token.INT, 0)),
		"WireframeContour":                             reflect.ValueOf(excelize.WireframeContour),
		"WireframeSurface3D":                           reflect.ValueOf(excelize.WireframeSurface3D),
		"XMLHeader":                                    reflect.ValueOf(excelize.XMLHeader),
		"XMLHeaderByte":                                reflect.ValueOf(&excelize.XMLHeaderByte).Elem(),

		// type definitions
		"Alignment":                         reflect.ValueOf((*excelize.Alignment)(nil)),
		"ArgType":                           reflect.ValueOf((*excelize.ArgType)(nil)),
		"AutoPageBreaks":                    reflect.ValueOf((*excelize.AutoPageBreaks)(nil)),
		"BaseColWidth":                      reflect.ValueOf((*excelize.BaseColWidth)(nil)),
		"Border":                            reflect.ValueOf((*excelize.Border)(nil)),
		"Cell":                              reflect.ValueOf((*excelize.Cell)(nil)),
		"CodeName":                          reflect.ValueOf((*excelize.CodeName)(nil)),
		"Cols":                              reflect.ValueOf((*excelize.Cols)(nil)),
		"Comment":                           reflect.ValueOf((*excelize.Comment)(nil)),
		"CustomHeight":                      reflect.ValueOf((*excelize.CustomHeight)(nil)),
		"DataValidation":                    reflect.ValueOf((*excelize.DataValidation)(nil)),
		"DataValidationErrorStyle":          reflect.ValueOf((*excelize.DataValidationErrorStyle)(nil)),
		"DataValidationOperator":            reflect.ValueOf((*excelize.DataValidationOperator)(nil)),
		"DataValidationType":                reflect.ValueOf((*excelize.DataValidationType)(nil)),
		"DefaultColWidth":                   reflect.ValueOf((*excelize.DefaultColWidth)(nil)),
		"DefaultGridColor":                  reflect.ValueOf((*excelize.DefaultGridColor)(nil)),
		"DefaultRowHeight":                  reflect.ValueOf((*excelize.DefaultRowHeight)(nil)),
		"DefinedName":                       reflect.ValueOf((*excelize.DefinedName)(nil)),
		"DocProperties":                     reflect.ValueOf((*excelize.DocProperties)(nil)),
		"EnableFormatConditionsCalculation": reflect.ValueOf((*excelize.EnableFormatConditionsCalculation)(nil)),
		"ErrSheetNotExist":                  reflect.ValueOf((*excelize.ErrSheetNotExist)(nil)),
		"File":                              reflect.ValueOf((*excelize.File)(nil)),
		"Fill":                              reflect.ValueOf((*excelize.Fill)(nil)),
		"FitToHeight":                       reflect.ValueOf((*excelize.FitToHeight)(nil)),
		"FitToPage":                         reflect.ValueOf((*excelize.FitToPage)(nil)),
		"FitToWidth":                        reflect.ValueOf((*excelize.FitToWidth)(nil)),
		"Font":                              reflect.ValueOf((*excelize.Font)(nil)),
		"FormatHeaderFooter":                reflect.ValueOf((*excelize.FormatHeaderFooter)(nil)),
		"FormatPageMargins":                 reflect.ValueOf((*excelize.FormatPageMargins)(nil)),
		"FormatSheetProtection":             reflect.ValueOf((*excelize.FormatSheetProtection)(nil)),
		"FormulaOpts":                       reflect.ValueOf((*excelize.FormulaOpts)(nil)),
		"HSL":                               reflect.ValueOf((*excelize.HSL)(nil)),
		"MergeCell":                         reflect.ValueOf((*excelize.MergeCell)(nil)),
		"OutlineSummaryBelow":               reflect.ValueOf((*excelize.OutlineSummaryBelow)(nil)),
		"PageLayoutOption":                  reflect.ValueOf((*excelize.PageLayoutOption)(nil)),
		"PageLayoutOptionPtr":               reflect.ValueOf((*excelize.PageLayoutOptionPtr)(nil)),
		"PageLayoutOrientation":             reflect.ValueOf((*excelize.PageLayoutOrientation)(nil)),
		"PageLayoutPaperSize":               reflect.ValueOf((*excelize.PageLayoutPaperSize)(nil)),
		"PageMarginBottom":                  reflect.ValueOf((*excelize.PageMarginBottom)(nil)),
		"PageMarginFooter":                  reflect.ValueOf((*excelize.PageMarginFooter)(nil)),
		"PageMarginHeader":                  reflect.ValueOf((*excelize.PageMarginHeader)(nil)),
		"PageMarginLeft":                    reflect.ValueOf((*excelize.PageMarginLeft)(nil)),
		"PageMarginRight":                   reflect.ValueOf((*excelize.PageMarginRight)(nil)),
		"PageMarginTop":                     reflect.ValueOf((*excelize.PageMarginTop)(nil)),
		"PageMarginsOptions":                reflect.ValueOf((*excelize.PageMarginsOptions)(nil)),
		"PageMarginsOptionsPtr":             reflect.ValueOf((*excelize.PageMarginsOptionsPtr)(nil)),
		"PivotTableField":                   reflect.ValueOf((*excelize.PivotTableField)(nil)),
		"PivotTableOption":                  reflect.ValueOf((*excelize.PivotTableOption)(nil)),
		"Protection":                        reflect.ValueOf((*excelize.Protection)(nil)),
		"Published":                         reflect.ValueOf((*excelize.Published)(nil)),
		"RichTextRun":                       reflect.ValueOf((*excelize.RichTextRun)(nil)),
		"RightToLeft":                       reflect.ValueOf((*excelize.RightToLeft)(nil)),
		"Rows":                              reflect.ValueOf((*excelize.Rows)(nil)),
		"SheetFormatPrOptions":              reflect.ValueOf((*excelize.SheetFormatPrOptions)(nil)),
		"SheetFormatPrOptionsPtr":           reflect.ValueOf((*excelize.SheetFormatPrOptionsPtr)(nil)),
		"SheetPrOption":                     reflect.ValueOf((*excelize.SheetPrOption)(nil)),
		"SheetPrOptionPtr":                  reflect.ValueOf((*excelize.SheetPrOptionPtr)(nil)),
		"SheetViewOption":                   reflect.ValueOf((*excelize.SheetViewOption)(nil)),
		"SheetViewOptionPtr":                reflect.ValueOf((*excelize.SheetViewOptionPtr)(nil)),
		"ShowFormulas":                      reflect.ValueOf((*excelize.ShowFormulas)(nil)),
		"ShowGridLines":                     reflect.ValueOf((*excelize.ShowGridLines)(nil)),
		"ShowRowColHeaders":                 reflect.ValueOf((*excelize.ShowRowColHeaders)(nil)),
		"ShowZeros":                         reflect.ValueOf((*excelize.ShowZeros)(nil)),
		"SparklineOption":                   reflect.ValueOf((*excelize.SparklineOption)(nil)),
		"Stack":                             reflect.ValueOf((*excelize.Stack)(nil)),
		"StreamWriter":                      reflect.ValueOf((*excelize.StreamWriter)(nil)),
		"Style":                             reflect.ValueOf((*excelize.Style)(nil)),
		"ThickBottom":                       reflect.ValueOf((*excelize.ThickBottom)(nil)),
		"ThickTop":                          reflect.ValueOf((*excelize.ThickTop)(nil)),
		"TopLeftCell":                       reflect.ValueOf((*excelize.TopLeftCell)(nil)),
		"ZeroHeight":                        reflect.ValueOf((*excelize.ZeroHeight)(nil)),
		"ZoomScale":                         reflect.ValueOf((*excelize.ZoomScale)(nil)),

		// interface wrapper definitions
		"_PageLayoutOption":        reflect.ValueOf((*_github_com_360EntSecGroup_Skylar_excelize_PageLayoutOption)(nil)),
		"_PageLayoutOptionPtr":     reflect.ValueOf((*_github_com_360EntSecGroup_Skylar_excelize_PageLayoutOptionPtr)(nil)),
		"_PageMarginsOptions":      reflect.ValueOf((*_github_com_360EntSecGroup_Skylar_excelize_PageMarginsOptions)(nil)),
		"_PageMarginsOptionsPtr":   reflect.ValueOf((*_github_com_360EntSecGroup_Skylar_excelize_PageMarginsOptionsPtr)(nil)),
		"_SheetFormatPrOptions":    reflect.ValueOf((*_github_com_360EntSecGroup_Skylar_excelize_SheetFormatPrOptions)(nil)),
		"_SheetFormatPrOptionsPtr": reflect.ValueOf((*_github_com_360EntSecGroup_Skylar_excelize_SheetFormatPrOptionsPtr)(nil)),
		"_SheetPrOption":           reflect.ValueOf((*_github_com_360EntSecGroup_Skylar_excelize_SheetPrOption)(nil)),
		"_SheetPrOptionPtr":        reflect.ValueOf((*_github_com_360EntSecGroup_Skylar_excelize_SheetPrOptionPtr)(nil)),
		"_SheetViewOption":         reflect.ValueOf((*_github_com_360EntSecGroup_Skylar_excelize_SheetViewOption)(nil)),
		"_SheetViewOptionPtr":      reflect.ValueOf((*_github_com_360EntSecGroup_Skylar_excelize_SheetViewOptionPtr)(nil)),
	}
}

// _github_com_360EntSecGroup_Skylar_excelize_PageLayoutOption is an interface wrapper for PageLayoutOption type
type _github_com_360EntSecGroup_Skylar_excelize_PageLayoutOption struct {
}

// _github_com_360EntSecGroup_Skylar_excelize_PageLayoutOptionPtr is an interface wrapper for PageLayoutOptionPtr type
type _github_com_360EntSecGroup_Skylar_excelize_PageLayoutOptionPtr struct {
}

// _github_com_360EntSecGroup_Skylar_excelize_PageMarginsOptions is an interface wrapper for PageMarginsOptions type
type _github_com_360EntSecGroup_Skylar_excelize_PageMarginsOptions struct {
}

// _github_com_360EntSecGroup_Skylar_excelize_PageMarginsOptionsPtr is an interface wrapper for PageMarginsOptionsPtr type
type _github_com_360EntSecGroup_Skylar_excelize_PageMarginsOptionsPtr struct {
}

// _github_com_360EntSecGroup_Skylar_excelize_SheetFormatPrOptions is an interface wrapper for SheetFormatPrOptions type
type _github_com_360EntSecGroup_Skylar_excelize_SheetFormatPrOptions struct {
}

// _github_com_360EntSecGroup_Skylar_excelize_SheetFormatPrOptionsPtr is an interface wrapper for SheetFormatPrOptionsPtr type
type _github_com_360EntSecGroup_Skylar_excelize_SheetFormatPrOptionsPtr struct {
}

// _github_com_360EntSecGroup_Skylar_excelize_SheetPrOption is an interface wrapper for SheetPrOption type
type _github_com_360EntSecGroup_Skylar_excelize_SheetPrOption struct {
}

// _github_com_360EntSecGroup_Skylar_excelize_SheetPrOptionPtr is an interface wrapper for SheetPrOptionPtr type
type _github_com_360EntSecGroup_Skylar_excelize_SheetPrOptionPtr struct {
}

// _github_com_360EntSecGroup_Skylar_excelize_SheetViewOption is an interface wrapper for SheetViewOption type
type _github_com_360EntSecGroup_Skylar_excelize_SheetViewOption struct {
}

// _github_com_360EntSecGroup_Skylar_excelize_SheetViewOptionPtr is an interface wrapper for SheetViewOptionPtr type
type _github_com_360EntSecGroup_Skylar_excelize_SheetViewOptionPtr struct {
}
